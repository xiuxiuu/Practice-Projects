using System.Runtime.ExceptionServices;

string[] grid = new string[9] {"1", "2", "3", "4", "5", "6", "7", "8", "9"};

bool isPlayerOneTurn = true;
int numTurns = 0;
while (!CheckVictory() && numTurns != 9)
{
    PrintGrid();
    if (isPlayerOneTurn)
    {
        Console.WriteLine("Player 1 turn!");
    }
    else
    {
        Console.WriteLine("Player 2 turn!");
    }

    string choice = Console.ReadLine();
    if (grid.Contains(choice) && choice != "X" && choice != "O")
    {
        int gridIndex = Convert.ToInt32(choice) - 1;
        if (isPlayerOneTurn)
        {
            grid[gridIndex] = "X";
        }
        else
        {
            grid[gridIndex] = "O";
        }
        numTurns++;
        Console.WriteLine(numTurns);
    }
    isPlayerOneTurn = !isPlayerOneTurn;
}
PrintGrid();
if (CheckVictory())
{
    Console.WriteLine("You win!");
}
else
{
    Console.WriteLine("Tie!");
}
bool CheckVictory()
{
    //first row win
    bool row1 = grid[0] == grid[1] && grid[1] == grid[2];
    //second row win
    bool row2 = grid[3] == grid[4] && grid[4] == grid[5];
    //third row win
    bool row3 = grid[6] == grid[7] && grid[7] == grid[8];
    //first column win
    bool col1 = grid[0] == grid[3] && grid[3] == grid[6];
    //second column win
    bool col2 = grid[1] == grid[4] && grid[4] == grid[7];
    //third column win
    bool col3 = grid[2] == grid[5] && grid[5] == grid[8];
    //diagonal down win
    bool diag1 = grid[0] == grid[4] && grid[4] == grid[8];
    //diagonal up win
    bool diag2 = grid[6] == grid[4] && grid[4] == grid[2];

    return row1 || row2 || row3 || col1 || col2 || col3 || diag1 || diag2;
}

void PrintGrid()
{
    for (int i = 0; i < 3; i++)
    {
        for (int j = 0; j < 3; j++)
        {
            Console.Write(grid[i * 3 + j] + "|");
        }
        Console.WriteLine();
        Console.WriteLine("------");
    }
}
